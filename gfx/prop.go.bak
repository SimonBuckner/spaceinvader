package gfx

import "github.com/veandco/go-sdl2/sdl"

// TransformXYZFunc transforms game X, Y, Z to diplay X, Y, Z
type TransformXYZFunc func(pos Vec3) (tX, tY, tZ int32)

// Prop represents an on-screen item.
type Prop struct {
	Name    string
	Pos     Vec3
	Texture *sdl.Texture
	Scale   float32

	Width  int32
	Height int32
	TransformXYZFunc
}

// NewProp factory
func NewProp(name string, texture *sdl.Texture, transformFunc TransformXYZFunc) *Prop {
	return &Prop{
		Name:             name,
		Texture:          texture,
		Pos:              Vec3{},
		Scale:            1,
		TransformXYZFunc: transformFunc,
	}
}

// Draw renders the props texture to the screen
func (p *Prop) Draw(renderer *sdl.Renderer) {
	if p.Texture == nil {
		return
	}

	_, _, w, h, _ := p.Texture.Query()
	var x, y int32

	if p.TransformXYZFunc != nil {
		x, y, _ = p.TransformXYZFunc(p.Pos)
	} else {
		x, y, _ = p.Pos.Int32()
	}
	dstRect := &sdl.Rect{
		X: x,
		Y: y,
		W: int32(float32(w) * p.Scale),
		H: int32(float32(h) * p.Scale),
	}
	renderer.Copy(p.Texture, nil, dstRect)
}
